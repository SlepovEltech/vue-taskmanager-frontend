{"remainingRequest":"/Users/artemslepov/Desktop/vue-practice/task-manager/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/artemslepov/Desktop/vue-practice/task-manager/src/views/List.vue?vue&type=style&index=0&id=20863650&scoped=true&lang=css&","dependencies":[{"path":"/Users/artemslepov/Desktop/vue-practice/task-manager/src/views/List.vue","mtime":1611847251456},{"path":"/Users/artemslepov/Desktop/vue-practice/task-manager/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/artemslepov/Desktop/vue-practice/task-manager/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/artemslepov/Desktop/vue-practice/task-manager/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/artemslepov/Desktop/vue-practice/task-manager/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/artemslepov/Desktop/vue-practice/task-manager/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnRkIHsKICBtYXgtd2lkdGggOiA0MDBweDsKfQoKLnRleHR7CiAgd2hpdGUtc3BhY2U6IG5vd3JhcDsKICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpczsKICBvdmVyZmxvdzogaGlkZGVuOwp9Cg=="},{"version":3,"sources":["List.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2EA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"List.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <h1>Task List</h1>\n    <hr>\n    <table v-if=\"this.tasks.length\">\n      <thead>\n      <tr>\n        <th>#</th>\n        <th>Title</th>\n        <th>Deadline</th>\n        <th>Description</th>\n        <th>Status</th>\n        <th>Open</th>\n      </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"(task,idx) of tasks\" :key=\"task.id\">\n          <td>{{idx+1}}</td>\n          <td>{{task.title}}</td>\n          <td>{{task.deadline}}</td>\n          <td class=\"td\">\n            <div class=\"text\">\n              {{task.description}}\n            </div>\n          </td>\n          <td>{{task.completed}}</td>\n          <td>\n            <router-link tag=\"button\" class=\"btn btn-small\" :to=\"{path : '/task/'+task.id}\" >\n              Open\n              <router-view :task=\"idx\"></router-view>\n\n            </router-link>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n    <p v-else></p>\n  </div>\n</template>\n\n<script>\nimport TaskDataService from \"../services/TaskDataService\";\n\nexport default {\n  name: \"List\",\n  data() {\n    return {\n      tasks: []\n    }\n  },\n  methods: {\n    retrieveTasks() {\n      TaskDataService.getAll()\n          .then(response => {\n            this.tasks = response.data;\n            console.log(response.data);\n          })\n          .catch(e => {\n            console.log(e);\n          });\n    }\n  },\n  computed:{\n\n  },\n  mounted() {\n    this.retrieveTasks();\n  },\n  beforeRouteUpdate(){\n    this.retrieveTasks();\n  }\n}\n</script>\n\n<style scoped>\n  .td {\n    max-width : 400px;\n  }\n\n  .text{\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n  }\n</style>"]}]}