{"remainingRequest":"/Users/artemslepov/Desktop/vue-practice/task-manager/node_modules/babel-loader/lib/index.js!/Users/artemslepov/Desktop/vue-practice/task-manager/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/artemslepov/Desktop/vue-practice/task-manager/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/artemslepov/Desktop/vue-practice/task-manager/src/views/List.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/artemslepov/Desktop/vue-practice/task-manager/src/views/List.vue","mtime":1611847251456},{"path":"/Users/artemslepov/Desktop/vue-practice/task-manager/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/artemslepov/Desktop/vue-practice/task-manager/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/artemslepov/Desktop/vue-practice/task-manager/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/artemslepov/Desktop/vue-practice/task-manager/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IFRhc2tEYXRhU2VydmljZSBmcm9tICIuLi9zZXJ2aWNlcy9UYXNrRGF0YVNlcnZpY2UiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIkxpc3QiLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB0YXNrczogW10KICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICByZXRyaWV2ZVRhc2tzOiBmdW5jdGlvbiByZXRyaWV2ZVRhc2tzKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgVGFza0RhdGFTZXJ2aWNlLmdldEFsbCgpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgX3RoaXMudGFza3MgPSByZXNwb25zZS5kYXRhOwogICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlLmRhdGEpOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZSkgewogICAgICAgIGNvbnNvbGUubG9nKGUpOwogICAgICB9KTsKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7fSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5yZXRyaWV2ZVRhc2tzKCk7CiAgfSwKICBiZWZvcmVSb3V0ZVVwZGF0ZTogZnVuY3Rpb24gYmVmb3JlUm91dGVVcGRhdGUoKSB7CiAgICB0aGlzLnJldHJpZXZlVGFza3MoKTsKICB9Cn07"},{"version":3,"sources":["List.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA,OAAA,eAAA,MAAA,6BAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,MADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,KAAA,EAAA;AADA,KAAA;AAGA,GANA;AAOA,EAAA,OAAA,EAAA;AACA,IAAA,aADA,2BACA;AAAA;;AACA,MAAA,eAAA,CAAA,MAAA,GACA,IADA,CACA,UAAA,QAAA,EAAA;AACA,QAAA,KAAA,CAAA,KAAA,GAAA,QAAA,CAAA,IAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,QAAA,CAAA,IAAA;AACA,OAJA,EAKA,KALA,CAKA,UAAA,CAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,CAAA;AACA,OAPA;AAQA;AAVA,GAPA;AAmBA,EAAA,QAAA,EAAA,EAnBA;AAsBA,EAAA,OAtBA,qBAsBA;AACA,SAAA,aAAA;AACA,GAxBA;AAyBA,EAAA,iBAzBA,+BAyBA;AACA,SAAA,aAAA;AACA;AA3BA,CAAA","sourcesContent":["<template>\n  <div>\n    <h1>Task List</h1>\n    <hr>\n    <table v-if=\"this.tasks.length\">\n      <thead>\n      <tr>\n        <th>#</th>\n        <th>Title</th>\n        <th>Deadline</th>\n        <th>Description</th>\n        <th>Status</th>\n        <th>Open</th>\n      </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"(task,idx) of tasks\" :key=\"task.id\">\n          <td>{{idx+1}}</td>\n          <td>{{task.title}}</td>\n          <td>{{task.deadline}}</td>\n          <td class=\"td\">\n            <div class=\"text\">\n              {{task.description}}\n            </div>\n          </td>\n          <td>{{task.completed}}</td>\n          <td>\n            <router-link tag=\"button\" class=\"btn btn-small\" :to=\"{path : '/task/'+task.id}\" >\n              Open\n              <router-view :task=\"idx\"></router-view>\n\n            </router-link>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n    <p v-else></p>\n  </div>\n</template>\n\n<script>\nimport TaskDataService from \"../services/TaskDataService\";\n\nexport default {\n  name: \"List\",\n  data() {\n    return {\n      tasks: []\n    }\n  },\n  methods: {\n    retrieveTasks() {\n      TaskDataService.getAll()\n          .then(response => {\n            this.tasks = response.data;\n            console.log(response.data);\n          })\n          .catch(e => {\n            console.log(e);\n          });\n    }\n  },\n  computed:{\n\n  },\n  mounted() {\n    this.retrieveTasks();\n  },\n  beforeRouteUpdate(){\n    this.retrieveTasks();\n  }\n}\n</script>\n\n<style scoped>\n  .td {\n    max-width : 400px;\n  }\n\n  .text{\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n  }\n</style>"],"sourceRoot":"src/views"}]}